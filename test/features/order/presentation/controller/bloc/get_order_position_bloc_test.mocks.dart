// Mocks generated by Mockito 5.4.6 from annotations
// in coffe_shop/test/features/order/presentation/controller/bloc/get_order_position_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:coffe_shop/core/helpers/failure.dart' as _i5;
import 'package:coffe_shop/features/order/data/models/order_model.dart' as _i6;
import 'package:coffe_shop/features/order/data/repo/order_repo.dart' as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [OrderRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrderRepo extends _i1.Mock implements _i3.OrderRepo {
  MockOrderRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> addOrder(_i6.OrderModel? order) =>
      (super.noSuchMethod(
            Invocation.method(#addOrder, [order]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#addOrder, [order]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderModel>>> getUserOrders() =>
      (super.noSuchMethod(
            Invocation.method(#getUserOrders, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderModel>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.OrderModel>>(
                    this,
                    Invocation.method(#getUserOrders, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.LatLng>> getDeliveryPosition({
    required String? orderId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getDeliveryPosition, [], {#orderId: orderId}),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.LatLng>>.value(
              _FakeEither_0<_i5.Failure, _i7.LatLng>(
                this,
                Invocation.method(#getDeliveryPosition, [], {
                  #orderId: orderId,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.LatLng>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, Set<_i7.Polyline>>>
  drawPolylineCoordinates({
    required _i7.LatLng? start,
    required _i7.LatLng? end,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#drawPolylineCoordinates, [], {
              #start: start,
              #end: end,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, Set<_i7.Polyline>>>.value(
                  _FakeEither_0<_i5.Failure, Set<_i7.Polyline>>(
                    this,
                    Invocation.method(#drawPolylineCoordinates, [], {
                      #start: start,
                      #end: end,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, Set<_i7.Polyline>>>);
}
